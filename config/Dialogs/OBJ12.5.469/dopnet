// Magic: cdfa191b
// Automatically generated PSI dialog (PSI version 12.5.469)
// Mon Sep 23 18:58:16 2013


f_tmp = FLOAT_FIELD;	// dialog.top.ui

resimulate.gad = ROW
{

    { WIDTH(0) }
    { WIDTH(0.1) }

    PARM_BUTTON("resimulate", "Reset Simulation") push VALUE(resimulate.val);
}
tdisplay.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

tdisplay.gad = PARM_BUTTON("tdisplay", "") toggle VALUE(tdisplay.val);

display.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 display.label = PARM_LABEL("Display", "display") WIDTH(1.27);
 PARM(integer, 1, "display", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(display.label) HSTRETCH;

}
}	

initialstate.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 initialstate.label = PARM_LABEL("Initial State", "initialstate") WIDTH(1.5);

 PARM_FIELD (pathstring, "initialstate") LABELREF(initialstate.label)
	VALUE(initialstate.val) HSTRETCH;

 initialstate.menu LOOK(menuiconbutton) SIZE(0.26, 0.26);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(initialstate.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

timestep.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 timestep.label = PARM_LABEL("Time Step", "timestep") WIDTH(1.5);
 PARM(float, 1, "timestep", none, none) RANGE(9.9999997473787516e-06,1)
	LOCK_RANGE LABELREF(timestep.label) HSTRETCH;

}

substep.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 substep.label = PARM_LABEL("Sub Steps", "substep") WIDTH(1.5);
 PARM(integer, 1, "substep", none, none) RANGE(1,10)
	LOCK_RANGE_MIN LABELREF(substep.label) HSTRETCH;

}

timeoffset.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 timeoffset.label = PARM_LABEL("Offset Time", "timeoffset") WIDTH(1.5);
 PARM(float, 1, "timeoffset", none, none) RANGE(-5,5)
	 LABELREF(timeoffset.label) HSTRETCH;

}

startframe.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 startframe.label = PARM_LABEL("Start Frame", "startframe") WIDTH(1.5);
 PARM(integer, 1, "startframe", none, none) RANGE(1,240)
	 LABELREF(startframe.label) HSTRETCH;

}

timescale.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 timescale.label = PARM_LABEL("Scale Time", "timescale") WIDTH(1.5);
 PARM(float, 1, "timescale", none, none) RANGE(0.0010000000474974513,10)
	LOCK_RANGE_MIN LABELREF(timescale.label) HSTRETCH;

}

maxfeedback.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 maxfeedback.label = PARM_LABEL("Max Feedback Loops", "maxfeedback") WIDTH(1.5);
 PARM(integer, 1, "maxfeedback", none, none) RANGE(1,50)
	LOCK_RANGE_MIN LABELREF(maxfeedback.label) HSTRETCH;

}

autoresim.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("autoresim", "Enable Automatic Resimulation") toggle VALUE(autoresim.val);

}

datahints.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("datahints", "Provide Data Hints") toggle VALUE(datahints.val);

}

interpolate.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("interpolate", "Interpolate Display Data") toggle VALUE(interpolate.val);

}

cacheenabled.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("cacheenabled", "Cache Simulation") toggle VALUE(cacheenabled.val);

}

compresssims.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("compresssims", "Compress .sim Files") toggle VALUE(compresssims.val);

}

cachemaxsize.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 cachemaxsize.label = PARM_LABEL("Cache Memory (MB)", "cachemaxsize") WIDTH(1.5);
 PARM(integer, 1, "cachemaxsize", none, none) RANGE(0,1000)
	LOCK_RANGE_MIN LABELREF(cachemaxsize.label) HSTRETCH;

}

cachetodisk.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("cachetodisk", "Allow Caching To Disk") toggle VALUE(cachetodisk.val);

}

cachetodisknoninteractive.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("cachetodisknoninteractive", "Cache to Disk in Non-Interactive Sessions") toggle VALUE(cachetodisknoninteractive.val);

}

cachesubsteps.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("cachesubsteps", "Cache Substep Data") toggle VALUE(cachesubsteps.val);

}

timeless.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("timeless", "Timeless (No History)") toggle VALUE(timeless.val);

}

explicitcache.gad = ROW
{

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("explicitcache", "Explicit Cache") toggle VALUE(explicitcache.val);

}

explicitcachename.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

 explicitcachename.label = PARM_LABEL("Explicit Cache Files", "explicitcachename") WIDTH(1.5);

 PARM_FIELD (pathstring, "explicitcachename") LABELREF(explicitcachename.label)
	VALUE(explicitcachename.val) HSTRETCH;

 explicitcachename.menu LOOK(menuiconbutton) SIZE(0.26, 0.26);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(explicitcachename.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

}

explicitcachensteps.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 explicitcachensteps.label = PARM_LABEL("Explicit Frames To Keep", "explicitcachensteps") WIDTH(1.5);
 PARM(integer, 1, "explicitcachensteps", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(explicitcachensteps.label) HSTRETCH;

}
keeppos.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

keeppos.gad = ROW
{

    PARM_BUTTON("keeppos", "Keep position when parenting") toggle VALUE(keeppos.val);

}

pre_xform.gad = ROW
{

    {  }
    { WIDTH(0.1) }

    pre_xform.menu;
}
}	
xOrd.join =		
{
  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

xOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Transform Order", "xOrd") WIDTH(1.5);
    { WIDTH(0.09) }

    xOrd.menu;

}

rOrd.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    rOrd.menu;

}
}	

t.gad = ROW
{
   HSTRETCH

   t.label = PARM_LABEL("Translate", "t") WIDTH(1.5);

   PARM(float, 3, "t", none, none, "X,Y,Z") LABELREF(t.label)
	HSTRETCH;

}

r.gad = ROW
{
   HSTRETCH

   r.label = PARM_LABEL("Rotate", "r") WIDTH(1.5);

   PARM(float, 3, "r", none, none, "X,Y,Z") LABELREF(r.label)
	HSTRETCH;

}

s.gad = ROW
{
   HSTRETCH

   s.label = PARM_LABEL("Scale", "s") WIDTH(1.5);

   PARM(float, 3, "s", none, none, "X,Y,Z") LABELREF(s.label)
	HSTRETCH;

}

p.gad = ROW
{
   HSTRETCH

   p.label = PARM_LABEL("Pivot", "p") WIDTH(1.5);

   PARM(float, 3, "p", none, none, "X,Y,Z") LABELREF(p.label)
	HSTRETCH;

}

scale.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 scale.label = PARM_LABEL("Uniform Scale", "scale") WIDTH(1.5);
 PARM(float, 1, "scale", none, none) RANGE(0,1)
	 LABELREF(scale.label) HSTRETCH;

}

lookatpath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 lookatpath.label = PARM_LABEL("Look At", "lookatpath") WIDTH(1.5);
 PARM_FIELD(pathstring, "lookatpath") VALUE(lookatpath.val) 
	LABELREF(lookatpath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(lookatpath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(lookatpath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;
}

lookup.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Look At Up Vector", "lookup") WIDTH(1.5);
    { WIDTH(0.09) }

    lookup.menu;

}

pathobjpath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)

 pathobjpath.label = PARM_LABEL("Path Object", "pathobjpath") WIDTH(1.5);
 PARM_FIELD(pathstring, "pathobjpath") VALUE(pathobjpath.val) 
	LABELREF(pathobjpath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(pathobjpath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(pathobjpath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;
}

roll.gad = ROW
{
   HSTRETCH

   roll.label = PARM_LABEL( "Roll", "roll" ) WIDTH(1.5);

   PARM(float, 1, "roll", none, none) RANGE(-360, 360)
	LABELREF( roll.label ) HSTRETCH;

}

pos.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 pos.label = PARM_LABEL("Position", "pos") WIDTH(1.5);
 PARM(float, 1, "pos", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(pos.label) HSTRETCH;

}

uparmtype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Parameterization", "uparmtype") WIDTH(1.5);
    { WIDTH(0.09) }

    uparmtype.menu;

}

pathorient.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 pathorient.label = PARM_LABEL("Orient Along Path", "pathorient") WIDTH(1.5);
 PARM(integer, 1, "pathorient", none, none) RANGE(0,1)
	 LABELREF(pathorient.label) HSTRETCH;

}

up.gad = ROW 
{
    HSTRETCH

    up.label = PARM_LABEL("Orient Up Vector", "up") WIDTH(1.5);

    PARM(float, 3, "up", none, none) LABELREF(up.label)
	HSTRETCH;

}

bank.gad = 
{
 LAYOUT(horizontal) HSTRETCH

 bank.label = PARM_LABEL("Auto-Bank factor", "bank") WIDTH(1.5);
 PARM(float, 1, "bank", none, none) RANGE(-1,1)
	 LABELREF(bank.label) HSTRETCH;

}
displayfilter.gad = NULL { }
use_dcolor.gad = NULL { }
dcolor.gad = NULL { }
picking.gad = NULL { }
pickscript.gad = NULL { }
caching.gad = NULL { }

stdswitcher.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG
    { 
	VALUE(stdswitcher.gad.val) STRETCH(1,0)

	TAB "Simulation"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    resimulate.gad;		
	    tdisplay.join;		
	    initialstate.gad;		
	    timestep.gad;		
	    substep.gad;		
	    timeoffset.gad;		
	    startframe.gad;		
	    timescale.gad;		
	    maxfeedback.gad;		
	    autoresim.gad;		
	    datahints.gad;		
	    interpolate.gad;		
	    cacheenabled.gad;		
	    compresssims.gad;		
	    cachemaxsize.gad;		
	    cachetodisk.gad;		
	    cachetodisknoninteractive.gad;		
	    cachesubsteps.gad;		
	    timeless.gad;		
	    explicitcache.gad;		
	    explicitcachename.gad;		
	    explicitcachensteps.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}

	TAB "Transform"
	{
	    LAYOUT(vertical) STRETCH

	    MARGIN(0.05) SPACING(2p)
	    keeppos.join;		
	    xOrd.join;		
	    t.gad;		
	    r.gad;		
	    s.gad;		
	    p.gad;		
	    scale.gad;		
	    lookatpath.gad;		
	    lookup.gad;		
	    pathobjpath.gad;		
	    roll.gad;		
	    pos.gad;		
	    uparmtype.gad;		
	    pathorient.gad;		
	    up.gad;		
	    bank.gad;		
	    displayfilter.gad;		
	    use_dcolor.gad;		
	    dcolor.gad;		
	    picking.gad;		
	    pickscript.gad;		
	    caching.gad;		

	    { STRETCH(1,1) LOOK(plain) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH LOOK(plain) 
    stdswitcher.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
